// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: Settings/TextAndImages.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// ====== COMPLETE ====== //
public struct TextAndImagesSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var diversitySurrogate: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._diversitySurrogate ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._diversitySurrogate = newValue}
  }
  /// Returns true if `diversitySurrogate` has been explicitly set.
  public var hasDiversitySurrogate: Bool {return _storage._diversitySurrogate != nil}
  /// Clears the value of `diversitySurrogate`. Subsequent reads from it will return its default value.
  public mutating func clearDiversitySurrogate() {_uniqueStorage()._diversitySurrogate = nil}

  public var useRichChatInput: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._useRichChatInput ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._useRichChatInput = newValue}
  }
  /// Returns true if `useRichChatInput` has been explicitly set.
  public var hasUseRichChatInput: Bool {return _storage._useRichChatInput != nil}
  /// Clears the value of `useRichChatInput`. Subsequent reads from it will return its default value.
  public mutating func clearUseRichChatInput() {_uniqueStorage()._useRichChatInput = nil}

  public var useThreadSidebar: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._useThreadSidebar ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._useThreadSidebar = newValue}
  }
  /// Returns true if `useThreadSidebar` has been explicitly set.
  public var hasUseThreadSidebar: Bool {return _storage._useThreadSidebar != nil}
  /// Clears the value of `useThreadSidebar`. Subsequent reads from it will return its default value.
  public mutating func clearUseThreadSidebar() {_uniqueStorage()._useThreadSidebar = nil}

  public var renderSpoilers: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._renderSpoilers ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._renderSpoilers = newValue}
  }
  /// Returns true if `renderSpoilers` has been explicitly set.
  public var hasRenderSpoilers: Bool {return _storage._renderSpoilers != nil}
  /// Clears the value of `renderSpoilers`. Subsequent reads from it will return its default value.
  public mutating func clearRenderSpoilers() {_uniqueStorage()._renderSpoilers = nil}

  public var emojiPickerCollapsedSections: [String] {
    get {return _storage._emojiPickerCollapsedSections}
    set {_uniqueStorage()._emojiPickerCollapsedSections = newValue}
  }

  public var stickerPickerCollapsedSections: [String] {
    get {return _storage._stickerPickerCollapsedSections}
    set {_uniqueStorage()._stickerPickerCollapsedSections = newValue}
  }

  public var viewImageDescriptions: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._viewImageDescriptions ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._viewImageDescriptions = newValue}
  }
  /// Returns true if `viewImageDescriptions` has been explicitly set.
  public var hasViewImageDescriptions: Bool {return _storage._viewImageDescriptions != nil}
  /// Clears the value of `viewImageDescriptions`. Subsequent reads from it will return its default value.
  public mutating func clearViewImageDescriptions() {_uniqueStorage()._viewImageDescriptions = nil}

  public var showCommandSuggestions: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._showCommandSuggestions ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._showCommandSuggestions = newValue}
  }
  /// Returns true if `showCommandSuggestions` has been explicitly set.
  public var hasShowCommandSuggestions: Bool {return _storage._showCommandSuggestions != nil}
  /// Clears the value of `showCommandSuggestions`. Subsequent reads from it will return its default value.
  public mutating func clearShowCommandSuggestions() {_uniqueStorage()._showCommandSuggestions = nil}

  public var inlineAttachmentMedia: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._inlineAttachmentMedia ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._inlineAttachmentMedia = newValue}
  }
  /// Returns true if `inlineAttachmentMedia` has been explicitly set.
  public var hasInlineAttachmentMedia: Bool {return _storage._inlineAttachmentMedia != nil}
  /// Clears the value of `inlineAttachmentMedia`. Subsequent reads from it will return its default value.
  public mutating func clearInlineAttachmentMedia() {_uniqueStorage()._inlineAttachmentMedia = nil}

  public var inlineEmbedMedia: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._inlineEmbedMedia ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._inlineEmbedMedia = newValue}
  }
  /// Returns true if `inlineEmbedMedia` has been explicitly set.
  public var hasInlineEmbedMedia: Bool {return _storage._inlineEmbedMedia != nil}
  /// Clears the value of `inlineEmbedMedia`. Subsequent reads from it will return its default value.
  public mutating func clearInlineEmbedMedia() {_uniqueStorage()._inlineEmbedMedia = nil}

  public var gifAutoPlay: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._gifAutoPlay ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._gifAutoPlay = newValue}
  }
  /// Returns true if `gifAutoPlay` has been explicitly set.
  public var hasGifAutoPlay: Bool {return _storage._gifAutoPlay != nil}
  /// Clears the value of `gifAutoPlay`. Subsequent reads from it will return its default value.
  public mutating func clearGifAutoPlay() {_uniqueStorage()._gifAutoPlay = nil}

  public var renderEmbeds: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._renderEmbeds ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._renderEmbeds = newValue}
  }
  /// Returns true if `renderEmbeds` has been explicitly set.
  public var hasRenderEmbeds: Bool {return _storage._renderEmbeds != nil}
  /// Clears the value of `renderEmbeds`. Subsequent reads from it will return its default value.
  public mutating func clearRenderEmbeds() {_uniqueStorage()._renderEmbeds = nil}

  public var renderReactions: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._renderReactions ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._renderReactions = newValue}
  }
  /// Returns true if `renderReactions` has been explicitly set.
  public var hasRenderReactions: Bool {return _storage._renderReactions != nil}
  /// Clears the value of `renderReactions`. Subsequent reads from it will return its default value.
  public mutating func clearRenderReactions() {_uniqueStorage()._renderReactions = nil}

  public var animateEmoji: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._animateEmoji ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._animateEmoji = newValue}
  }
  /// Returns true if `animateEmoji` has been explicitly set.
  public var hasAnimateEmoji: Bool {return _storage._animateEmoji != nil}
  /// Clears the value of `animateEmoji`. Subsequent reads from it will return its default value.
  public mutating func clearAnimateEmoji() {_uniqueStorage()._animateEmoji = nil}

  public var animateStickers: SwiftProtobuf.Google_Protobuf_UInt32Value {
    get {return _storage._animateStickers ?? SwiftProtobuf.Google_Protobuf_UInt32Value()}
    set {_uniqueStorage()._animateStickers = newValue}
  }
  /// Returns true if `animateStickers` has been explicitly set.
  public var hasAnimateStickers: Bool {return _storage._animateStickers != nil}
  /// Clears the value of `animateStickers`. Subsequent reads from it will return its default value.
  public mutating func clearAnimateStickers() {_uniqueStorage()._animateStickers = nil}

  public var enableTtsCommand: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._enableTtsCommand ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._enableTtsCommand = newValue}
  }
  /// Returns true if `enableTtsCommand` has been explicitly set.
  public var hasEnableTtsCommand: Bool {return _storage._enableTtsCommand != nil}
  /// Clears the value of `enableTtsCommand`. Subsequent reads from it will return its default value.
  public mutating func clearEnableTtsCommand() {_uniqueStorage()._enableTtsCommand = nil}

  public var messageDisplayCompact: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._messageDisplayCompact ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._messageDisplayCompact = newValue}
  }
  /// Returns true if `messageDisplayCompact` has been explicitly set.
  public var hasMessageDisplayCompact: Bool {return _storage._messageDisplayCompact != nil}
  /// Clears the value of `messageDisplayCompact`. Subsequent reads from it will return its default value.
  public mutating func clearMessageDisplayCompact() {_uniqueStorage()._messageDisplayCompact = nil}

  /// Is something missing here?
  public var explicitContentFilter: SwiftProtobuf.Google_Protobuf_UInt32Value {
    get {return _storage._explicitContentFilter ?? SwiftProtobuf.Google_Protobuf_UInt32Value()}
    set {_uniqueStorage()._explicitContentFilter = newValue}
  }
  /// Returns true if `explicitContentFilter` has been explicitly set.
  public var hasExplicitContentFilter: Bool {return _storage._explicitContentFilter != nil}
  /// Clears the value of `explicitContentFilter`. Subsequent reads from it will return its default value.
  public mutating func clearExplicitContentFilter() {_uniqueStorage()._explicitContentFilter = nil}

  public var viewNsfwGuilds: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._viewNsfwGuilds ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._viewNsfwGuilds = newValue}
  }
  /// Returns true if `viewNsfwGuilds` has been explicitly set.
  public var hasViewNsfwGuilds: Bool {return _storage._viewNsfwGuilds != nil}
  /// Clears the value of `viewNsfwGuilds`. Subsequent reads from it will return its default value.
  public mutating func clearViewNsfwGuilds() {_uniqueStorage()._viewNsfwGuilds = nil}

  public var convertEmoticons: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._convertEmoticons ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._convertEmoticons = newValue}
  }
  /// Returns true if `convertEmoticons` has been explicitly set.
  public var hasConvertEmoticons: Bool {return _storage._convertEmoticons != nil}
  /// Clears the value of `convertEmoticons`. Subsequent reads from it will return its default value.
  public mutating func clearConvertEmoticons() {_uniqueStorage()._convertEmoticons = nil}

  public var expressionSuggestionsEnabled: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._expressionSuggestionsEnabled ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._expressionSuggestionsEnabled = newValue}
  }
  /// Returns true if `expressionSuggestionsEnabled` has been explicitly set.
  public var hasExpressionSuggestionsEnabled: Bool {return _storage._expressionSuggestionsEnabled != nil}
  /// Clears the value of `expressionSuggestionsEnabled`. Subsequent reads from it will return its default value.
  public mutating func clearExpressionSuggestionsEnabled() {_uniqueStorage()._expressionSuggestionsEnabled = nil}

  public var viewNsfwCommands: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._viewNsfwCommands ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._viewNsfwCommands = newValue}
  }
  /// Returns true if `viewNsfwCommands` has been explicitly set.
  public var hasViewNsfwCommands: Bool {return _storage._viewNsfwCommands != nil}
  /// Clears the value of `viewNsfwCommands`. Subsequent reads from it will return its default value.
  public mutating func clearViewNsfwCommands() {_uniqueStorage()._viewNsfwCommands = nil}

  public var useLegacyChatInput: SwiftProtobuf.Google_Protobuf_BoolValue {
    get {return _storage._useLegacyChatInput ?? SwiftProtobuf.Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._useLegacyChatInput = newValue}
  }
  /// Returns true if `useLegacyChatInput` has been explicitly set.
  public var hasUseLegacyChatInput: Bool {return _storage._useLegacyChatInput != nil}
  /// Clears the value of `useLegacyChatInput`. Subsequent reads from it will return its default value.
  public mutating func clearUseLegacyChatInput() {_uniqueStorage()._useLegacyChatInput = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=5.5) && canImport(_Concurrency)
extension TextAndImagesSettings: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension TextAndImagesSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "TextAndImagesSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "diversity_surrogate"),
    2: .standard(proto: "use_rich_chat_input"),
    3: .standard(proto: "use_thread_sidebar"),
    4: .standard(proto: "render_spoilers"),
    5: .standard(proto: "emoji_picker_collapsed_sections"),
    6: .standard(proto: "sticker_picker_collapsed_sections"),
    7: .standard(proto: "view_image_descriptions"),
    8: .standard(proto: "show_command_suggestions"),
    9: .standard(proto: "inline_attachment_media"),
    10: .standard(proto: "inline_embed_media"),
    11: .standard(proto: "gif_auto_play"),
    12: .standard(proto: "render_embeds"),
    13: .standard(proto: "render_reactions"),
    14: .standard(proto: "animate_emoji"),
    15: .standard(proto: "animate_stickers"),
    16: .standard(proto: "enable_tts_command"),
    17: .standard(proto: "message_display_compact"),
    19: .standard(proto: "explicit_content_filter"),
    20: .standard(proto: "view_nsfw_guilds"),
    21: .standard(proto: "convert_emoticons"),
    22: .standard(proto: "expression_suggestions_enabled"),
    23: .standard(proto: "view_nsfw_commands"),
    24: .standard(proto: "use_legacy_chat_input"),
  ]

  fileprivate class _StorageClass {
    var _diversitySurrogate: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _useRichChatInput: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _useThreadSidebar: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _renderSpoilers: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _emojiPickerCollapsedSections: [String] = []
    var _stickerPickerCollapsedSections: [String] = []
    var _viewImageDescriptions: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _showCommandSuggestions: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _inlineAttachmentMedia: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _inlineEmbedMedia: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _gifAutoPlay: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _renderEmbeds: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _renderReactions: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _animateEmoji: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _animateStickers: SwiftProtobuf.Google_Protobuf_UInt32Value? = nil
    var _enableTtsCommand: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _messageDisplayCompact: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _explicitContentFilter: SwiftProtobuf.Google_Protobuf_UInt32Value? = nil
    var _viewNsfwGuilds: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _convertEmoticons: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _expressionSuggestionsEnabled: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _viewNsfwCommands: SwiftProtobuf.Google_Protobuf_BoolValue? = nil
    var _useLegacyChatInput: SwiftProtobuf.Google_Protobuf_BoolValue? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _diversitySurrogate = source._diversitySurrogate
      _useRichChatInput = source._useRichChatInput
      _useThreadSidebar = source._useThreadSidebar
      _renderSpoilers = source._renderSpoilers
      _emojiPickerCollapsedSections = source._emojiPickerCollapsedSections
      _stickerPickerCollapsedSections = source._stickerPickerCollapsedSections
      _viewImageDescriptions = source._viewImageDescriptions
      _showCommandSuggestions = source._showCommandSuggestions
      _inlineAttachmentMedia = source._inlineAttachmentMedia
      _inlineEmbedMedia = source._inlineEmbedMedia
      _gifAutoPlay = source._gifAutoPlay
      _renderEmbeds = source._renderEmbeds
      _renderReactions = source._renderReactions
      _animateEmoji = source._animateEmoji
      _animateStickers = source._animateStickers
      _enableTtsCommand = source._enableTtsCommand
      _messageDisplayCompact = source._messageDisplayCompact
      _explicitContentFilter = source._explicitContentFilter
      _viewNsfwGuilds = source._viewNsfwGuilds
      _convertEmoticons = source._convertEmoticons
      _expressionSuggestionsEnabled = source._expressionSuggestionsEnabled
      _viewNsfwCommands = source._viewNsfwCommands
      _useLegacyChatInput = source._useLegacyChatInput
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._diversitySurrogate) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._useRichChatInput) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._useThreadSidebar) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._renderSpoilers) }()
        case 5: try { try decoder.decodeRepeatedStringField(value: &_storage._emojiPickerCollapsedSections) }()
        case 6: try { try decoder.decodeRepeatedStringField(value: &_storage._stickerPickerCollapsedSections) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._viewImageDescriptions) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._showCommandSuggestions) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._inlineAttachmentMedia) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._inlineEmbedMedia) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._gifAutoPlay) }()
        case 12: try { try decoder.decodeSingularMessageField(value: &_storage._renderEmbeds) }()
        case 13: try { try decoder.decodeSingularMessageField(value: &_storage._renderReactions) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._animateEmoji) }()
        case 15: try { try decoder.decodeSingularMessageField(value: &_storage._animateStickers) }()
        case 16: try { try decoder.decodeSingularMessageField(value: &_storage._enableTtsCommand) }()
        case 17: try { try decoder.decodeSingularMessageField(value: &_storage._messageDisplayCompact) }()
        case 19: try { try decoder.decodeSingularMessageField(value: &_storage._explicitContentFilter) }()
        case 20: try { try decoder.decodeSingularMessageField(value: &_storage._viewNsfwGuilds) }()
        case 21: try { try decoder.decodeSingularMessageField(value: &_storage._convertEmoticons) }()
        case 22: try { try decoder.decodeSingularMessageField(value: &_storage._expressionSuggestionsEnabled) }()
        case 23: try { try decoder.decodeSingularMessageField(value: &_storage._viewNsfwCommands) }()
        case 24: try { try decoder.decodeSingularMessageField(value: &_storage._useLegacyChatInput) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._diversitySurrogate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      } }()
      try { if let v = _storage._useRichChatInput {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      try { if let v = _storage._useThreadSidebar {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      } }()
      try { if let v = _storage._renderSpoilers {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      if !_storage._emojiPickerCollapsedSections.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._emojiPickerCollapsedSections, fieldNumber: 5)
      }
      if !_storage._stickerPickerCollapsedSections.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._stickerPickerCollapsedSections, fieldNumber: 6)
      }
      try { if let v = _storage._viewImageDescriptions {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._showCommandSuggestions {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._inlineAttachmentMedia {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._inlineEmbedMedia {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._gifAutoPlay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
      try { if let v = _storage._renderEmbeds {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      } }()
      try { if let v = _storage._renderReactions {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      } }()
      try { if let v = _storage._animateEmoji {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      } }()
      try { if let v = _storage._animateStickers {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      } }()
      try { if let v = _storage._enableTtsCommand {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      } }()
      try { if let v = _storage._messageDisplayCompact {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      } }()
      try { if let v = _storage._explicitContentFilter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      } }()
      try { if let v = _storage._viewNsfwGuilds {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      } }()
      try { if let v = _storage._convertEmoticons {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      } }()
      try { if let v = _storage._expressionSuggestionsEnabled {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      } }()
      try { if let v = _storage._viewNsfwCommands {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      } }()
      try { if let v = _storage._useLegacyChatInput {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: TextAndImagesSettings, rhs: TextAndImagesSettings) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._diversitySurrogate != rhs_storage._diversitySurrogate {return false}
        if _storage._useRichChatInput != rhs_storage._useRichChatInput {return false}
        if _storage._useThreadSidebar != rhs_storage._useThreadSidebar {return false}
        if _storage._renderSpoilers != rhs_storage._renderSpoilers {return false}
        if _storage._emojiPickerCollapsedSections != rhs_storage._emojiPickerCollapsedSections {return false}
        if _storage._stickerPickerCollapsedSections != rhs_storage._stickerPickerCollapsedSections {return false}
        if _storage._viewImageDescriptions != rhs_storage._viewImageDescriptions {return false}
        if _storage._showCommandSuggestions != rhs_storage._showCommandSuggestions {return false}
        if _storage._inlineAttachmentMedia != rhs_storage._inlineAttachmentMedia {return false}
        if _storage._inlineEmbedMedia != rhs_storage._inlineEmbedMedia {return false}
        if _storage._gifAutoPlay != rhs_storage._gifAutoPlay {return false}
        if _storage._renderEmbeds != rhs_storage._renderEmbeds {return false}
        if _storage._renderReactions != rhs_storage._renderReactions {return false}
        if _storage._animateEmoji != rhs_storage._animateEmoji {return false}
        if _storage._animateStickers != rhs_storage._animateStickers {return false}
        if _storage._enableTtsCommand != rhs_storage._enableTtsCommand {return false}
        if _storage._messageDisplayCompact != rhs_storage._messageDisplayCompact {return false}
        if _storage._explicitContentFilter != rhs_storage._explicitContentFilter {return false}
        if _storage._viewNsfwGuilds != rhs_storage._viewNsfwGuilds {return false}
        if _storage._convertEmoticons != rhs_storage._convertEmoticons {return false}
        if _storage._expressionSuggestionsEnabled != rhs_storage._expressionSuggestionsEnabled {return false}
        if _storage._viewNsfwCommands != rhs_storage._viewNsfwCommands {return false}
        if _storage._useLegacyChatInput != rhs_storage._useLegacyChatInput {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
